---
title: "Untitled"
format: html
editor: visual
---

## Set up environment, functions and local variables

```{r setup, message = F}
library(tidyverse)
library(tidybayes)
library(patchwork)
library(cowplot)
library(extrafont)
library(ggpubr)

source("functions.R")
source("MCMC REFINED.R")


data <- readRDS("../data/data_ye2.RData") %>% 
  rename_all(~str_replace(.,"2","")) %>% 
  filter(SOURCE == "Kansas")
# Local variables
sum_path<- paste0("../output/model/summaries_50M.RData")
violeta <- '#75338a'
naranja <- '#de870d'
mix <- "#aa5d4c"
trt_levels <- c("Treated_Heavy","Treated_Moderate", "Treated_Light", "None_Heavy","None_Moderate")


```

# Main body

## Figure 1 Canada

-   Show the previous priors and the updated priors

```{r fig.width = 25, fig.height=5}
sum_df <- readRDS("../output/model/summaries_canada.RData")

dataP1 <- 
as.data.frame(sum_df$mod[[1]]) %>% 
  pivot_longer(cols = everything()) %>% 
  # Add colors to indicate to which model the parameter belongs
  mutate(model = ifelse(name %in% c("AOPD", "b1"), "Expected Value", "Variance"),
         name = case_when(name == "AOPD"~"AOPD[.]", 
                          name == "b1"~"beta[1][.]",
                          name == "a1"~"alpha[1][.]", 
                          name == "maxVPD"~"maxVPD[.]",
                          name == "minVPD"~"minRPD[.]"
                          ), 
         name = fct_relevel(as.factor(name), 
                            c("beta[1][.]", "AOPD[.]","alpha[1]", "maxVPD[.]", "minRPD[.]"))
         )

label <- unique(dataP1[,"name"]) %>% 
  mutate(label = c("A","B", "C", "D", "E"))
```

```{r fig.width = 15, fig.height=10}
pMean <- 
dataP1 %>% 
  filter(name %in% c("beta[1][.]", "AOPD[.]")) %>% 
  ggplot(aes(x = value))+
  geom_histogram(aes(fill = model),bins = 30, color = "black", linewidth = 1.2, alpha = .4)+
  geom_text(data = label[1:2,],
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  facet_wrap(~name,ncol = 5, scales = "free", labeller = label_parsed, strip.position="bottom")+
  guides(fill = "none")+
  scale_fill_manual(values = c(violeta, naranja))+
  labs(x = "", y = "Frequency (n = 200,000)")+
  theme_custom()+
  theme(strip.text = element_text(size = 15), 
        axis.text = element_text(size = 12),
        axis.title = element_text(size = 15))
pVar <- 
dataP1 %>% 
  filter(name %in% c("alpha[1][.]", "maxVPD[.]", "minRPD[.]")) %>% 
  ggplot(aes(x = value))+
  geom_histogram(aes(fill = model),bins = 30, color = "black", linewidth = 1.2, alpha = .4)+
  geom_text(data = label[3:5,],
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  facet_wrap(~name,ncol = 5, scales = "free", labeller = label_parsed, strip.position="bottom")+
  guides(fill = "none")+
  scale_fill_manual(values = c(naranja))+
  labs(x = "", y = "Frequency (n = 200,000)")+
  theme_custom()+
  theme(strip.text = element_text(size = 15), 
        axis.text = element_text(size = 12), 
        axis.title = element_text(size = 15))

pM <- ggarrange(NULL, pMean,NULL, ncol = 3, widths = c(0.167, 0.66, 0.17))

pCAN <- ggarrange(pM, pVar, ncol = 1)
pCAN
ggsave(plot = pCAN , "../output/plots/figures2/Figure 1_cote.svg", width = 15, height = 10, dpi=600)
```

## Figure Kansas overall

```{r fig.width = 10, fig.height=5}
sum_df <- readRDS("../output/model/summaries_50M_ksAll.RData")


points <- data %>% 
  mutate(.,
         m = "m",
         var = "var", 
         pred = "pred" 
         ) %>% 
  pivot_longer(cols = c(m, var, pred), names_to = 'estimate', values_to = "value") %>% 
  mutate(YIELD = case_when(estimate %in% c("pred") ~YIELD, T~NA_real_), 
         estimate = fct_relevel(as.factor(estimate), c("m", "var", "pred")
                                )
         )

estimate_names <- c(m = "mu[ij]~(Mg~ha^-1)",
                    pred = "y[ij]~(Mg~ha^-1)",
                    var = "sigma[ij]~(Mg~ha^-1)"
                    ) 

label <- unique(points[, "estimate"]) %>% 
  mutate(label = c("A", "B", "C"))
```

```{r fig.width = 15, fig.height=5}
pKS <- sum_df[,c("mod_sum")] %>% 
  unnest() %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(-pred_q025) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:pred_q025), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  mutate(.,
         max_height = case_when(estimate %in% c("pred","m")~9, 
                                estimate == "var"~1.3,
                                ),
         min_height = case_when(estimate %in% c("pred","m")~0, 
                                estimate == "var"~0
                                )
         ) %>% 
  mutate(estimate = fct_relevel(as.factor(estimate), c("m", "var", "pred")
                                )
         ) %>% 
  ggplot()+
  geom_blank(aes(y = max_height)) +
  geom_blank(aes(y = min_height)) +
  
    geom_point(data = points,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 3, alpha = 0.1
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND, ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  geom_text(data = label,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja, mix))+
  scale_color_manual(values = c(violeta, naranja, mix))+

  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste("Plant Density (",plants~m^-2,")")))+
  facet_wrap(~estimate, 
             scales = "free", 
             strip.position = "left",
             labeller = labeller(estimate = as_labeller(estimate_names, label_parsed))
             )+
  theme_custom()+
  theme(strip.text = element_text(size = 15))
  

pKS
ggsave(plot = pKS , "../output/plots/figures/Figure 2.png", width = 15, height = 4, dpi=600)
```

# Figure 2

Show only a single split in this case

```{r fig.width = 15, fig.height=5}
min_stand <-
data %>%
  group_by(SOURCE, YE, TRT, CLEAN) %>%
  summarise_at(vars(STAND), ~min(.,na.rm=T)) %>%
  rename(minSTAND = STAND) %>%
  filter(YE == 3.37 & TRT == "None" & CLEAN == "Light")

pointSubset <- points %>% 
  filter(YE == 3.37 & TRT == "None" & CLEAN == "Light")
  
sum_df <- 
 readRDS(sum_path) %>% 
  filter(YE == 3.37 & TRT == "None" & CLEAN == "Light") %>% 
  full_join(min_stand) %>% 
  mutate(mod_sum = pmap(list(..1 = mod_sum, ..2 = minSTAND), 
                        ~ ..1 %>% mutate(STAND = ifelse(STAND >= ..2, STAND, NA)) %>% 
                          drop_na()
                        ))


p2 <- 
sum_df[,c("mod_sum")] %>% 
  unnest() %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(-pred_q025) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:pred_q025), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  mutate(.,
         max_height = case_when(estimate %in% c("pred","m")~6.5, 
                                estimate == "var"~1.3,
                                ),
         min_height = case_when(estimate %in% c("pred","m")~0, 
                                estimate == "var"~0
                                )
         ) %>% 
  mutate(estimate = fct_relevel(as.factor(estimate), c("m", "var", "pred")
                                )
         ) %>% 
  ggplot()+
  geom_blank(aes(y = max_height)) +
  geom_blank(aes(y = min_height)) +
  
  geom_point(data = pointSubset,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 3, alpha = 0.1
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND, ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  geom_text(data = label,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja, mix))+
  scale_color_manual(values = c(violeta, naranja, mix))+

  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste(italic(s[ij])," (",plants~m^-2,")")))+
  facet_wrap(~estimate, 
             scales = "free", 
             strip.position = "left",
             labeller = labeller(estimate = as_labeller(estimate_names, label_parsed))
             )+
  theme_custom()+
  theme(strip.text = element_text(size = 20), 
        axis.title.x = element_text(size = 20)
        )
p2
ggsave(plot = p2 , "../output/plots/figures2/Figure 2.png", width = 15, height = 4, dpi=600)
```

## Figure 3

```{r}
comp <- 
readRDS(sum_path) %>% 
  #filter(YE == 3.37) %>% 
  mutate(.,
         mod  = map(mod,
                        ~mod_predict(.x))
         )

comp2<-
comp[, c("YE", "TRT", "CLEAN", "mod")] %>% 
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(.,
         pred = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         
         p = map(pred, 
                       function(pred){
                        psd  <- sum(ifelse(pred[,"sd"] > 0,1,0))/nrow(pred)
                        pmean <-  sum(ifelse(pred[,"mean"] > 0,1,0))/nrow(pred)
                        return(as.data.frame(cbind(var = psd, mean = pmean)))
                       }
                 )
         ) %>% 
  filter(Treatment == "Treated_Heavy")


label <- comp2[,c("YE","Treatment", "p")] %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(var, mean)) %>% 
   mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels),
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low", 
                        YE == 5.59 ~ "High")
          )


# Free unuused memory
rm(comp)
gc()

comp2_sum <-
comp2[, c("YE","Treatment", "pred")] %>% 
  #mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels)) %>% 
  unnest(cols = c(pred)) %>% 
  #Transform variance to SD
  pivot_longer(cols = c(sd, mean)) %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low", 
                        YE == 5.59 ~ "High")
         )

points<- 
comp2_sum %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )

labelSP <- 
  points %>% 
  ungroup() %>% 
  dplyr::select(YE) %>% 
  unique() %>% 
  mutate(label = c("A", "B"))
```

```{r fig.width=8, fig.height=5}
variable <- "mean"
p3A <- 
comp2_sum %>% 
  filter(name == variable) %>% 
ggplot()+
  stat_halfeye(aes(x = value,
                   y = stringr::str_wrap(YE, 9)),
               fill = violeta, .width = 0, alpha = 0.4, height = 0.4,
                  size = 0.7, point_alpha = 0)+
  geom_linerange(data = points %>% filter(name == variable),
                 aes(xmin = q025,
                     xmax = q975, 
                     y=stringr::str_wrap(YE, 9),
                     group = name), 
                 linewidth = 1.6, 
                 color = violeta,
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points %>% filter(name == variable),
             aes(y = stringr::str_wrap(YE, 9),
                 x = q500, shape = YE),
             fill = violeta,
             size=3, 
             stroke = 1.5)+
  geom_vline(xintercept = 0, 
             linetype = "dashed")+
  geom_text(data = label %>% filter(name == variable),
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),
                y = stringr::str_wrap(YE, 9)),
            color = violeta,
            fontface = "bold",
            size=3.5,
            x= Inf, 
            vjust = 1.2,
            hjust = 0.5)+
    geom_text(aes(label = "A"),
                 fontface = "bold",size=6,
                 x = Inf, y= -Inf, vjust = 1.2, hjust =-0.25)+
  coord_flip()+
  guides(fill = "none", color = "none", shape = "none")+
  scale_shape_manual(values = c(21, 23))+
  labs(y = "", x = expression(Delta~paste(mu[j]," (",Mg~ha^-1,")")))+
  theme_custom()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        axis.title = element_text(size=10)
  )

variable <- "sd"
p3B <- 
comp2_sum %>% 
  filter(name == variable) %>% 
ggplot()+
  stat_halfeye(aes(x = value,
                   y = stringr::str_wrap(YE, 9)),
               fill = naranja, .width = 0, alpha = 0.4, height = 0.4,
                  size = 0.7, point_alpha = 0)+
  geom_linerange(data = points %>% filter(name == variable),
                 aes(xmin = q025,
                     xmax = q975, 
                     y=stringr::str_wrap(YE, 9),
                     group = name), 
                 linewidth = 1.6, 
                 color = naranja,
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points %>% filter(name == variable),
             aes(y = stringr::str_wrap(YE, 9),
                 x = q500, shape = YE),
             fill = naranja,
             
             size=3, 
             stroke = 1.5)+
  geom_vline(xintercept = 0, 
             linetype = "dashed")+
  geom_text(data = label %>% filter(name == "var"),
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),
                y = stringr::str_wrap(YE, 9)),
            color = naranja,
            fontface = "bold",
            size=3.5,
            x= Inf, 
            vjust = 1.2,
            hjust = 0.5)+
    geom_text(aes(label = "B"),
                 fontface = "bold",size=6,
                 x = Inf, y= -Inf, vjust = 1.2, hjust =-0.25)+
  coord_flip()+
  guides(fill = "none", color = "none", shape = "none")+
  scale_shape_manual(values = c(21, 23))+
  labs(y = "", x = expression(Delta~paste(sigma[~j]," (",Mg~ha^-1,")")))+
  theme_custom()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        axis.title = element_text(size=10)
  )


p3 <- ggarrange(p3A , p3B, ncol = 2)

ggsave(plot = p3 , "../output/plots/figures2/Figure 3.png", width = 10, height = 5, dpi=600)

```

## Figure 4

```{r}
comp4 <- 
readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  ungroup() %>% 
  mutate(.,
         Treatment = paste0(TRT, "_", CLEAN), 
         mod = map(mod, ~as.data.frame(.x[,c("minVPD", "AOPD")])),
         ) %>% 
  filter(Treatment %in% c("None_Light", "Treated_Heavy") ) %>% 
  dplyr::select(-c(TRT, CLEAN)) %>% 
  unnest(c(mod)) %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low", 
                        YE == 5.59 ~ "High")
         ) %>% 
  rename(minRPD = minVPD)
          

points4<- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )

labelSP <- data.frame(name = c("AOPD", "minRPD"), 
                      label = c("A", "B"))
  
```

```{r}

strip_text <- c(minRPD = "minRPD[~j]", AOPD = "AOPD[~j]")
p6 <- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>% 
  ggplot()+
  facet_wrap(~name, strip.position = "left", 
             labeller = labeller(name = as_labeller(strip_text, label_parsed)))+
  stat_halfeye(aes(y=value, x=Treatment, fill= name, group = YE),scale = 0.7,
               .width = 0, position = position_dodge(0.7),alpha = 0.4, height = 0.25, 
                  size = 0.7, point_alpha = 0)+
  #coord_flip()+
  geom_linerange(data = points4, 
                 aes(ymin = q025, ymax = q975, x=Treatment, color = name, group = name), 
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8,
                 position = position_dodge2(.7))+
  geom_point(data = points4,
             aes(x = Treatment, y = q500, fill = name, shape = YE), 
              size=3, stroke = 1.5,position = position_dodge2(.7))+
  geom_text(data = labelSP,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  guides(fill = "none", color = "none", shape = guide_legend(title = "Yield Environment"))+
  scale_shape_manual(values = c(21, 23))+
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(0,200,50), limits = c(50,200))+
  labs(y = "",x="")+
  theme_custom()+
  theme(legend.position = "top",
        legend.background = element_blank(),
        legend.key=element_blank(),
    
        strip.text.y = element_text(size = 15), 
        
        strip.background = element_rect(fill= NA))

p6 

ggsave(plot = p6 , "../output/plots/figures2/Figure 4.png", width = 10, height = 5, dpi=600)
```

## Figure 5

```{r}
comp3 <-
  readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  
  
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(., 
         posterior = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         p = map(posterior, 
                       function(posterior){
                        p <-  apply(posterior , MARGIN = 2, FUN = function(param){
                          sum(ifelse(param > 0,1,0))/nrow(posterior)
                          })
                        
                        return(data.frame(a1 = p["a1"], maxVPD = p["maxVPD"], minVPD = p["minVPD"], b1 = p["b1"], AOPD = p["AOPD"]))
                        }
                 )
         ) %>% 
  rename(treated = "VAL") %>% 
  filter(Treatment == "Treated_Heavy") %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low", 
                        YE == 5.59 ~ "High")
         
         )



label <- comp3[,c("YE","Treatment", "p")] %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(a1:AOPD)) %>% 
   filter(name %in% c("minVPD", "AOPD")) %>% 
   mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels), 
          name = ifelse(name == "minVPD", "minRPD", name)
          #label = case_when(name == "minRPD"~"D", T~"C")
          )

comp3_sum<-
comp3[,c("YE","Treatment","posterior")] %>% 
  unnest(cols = c(posterior)) %>% 
  # Filter parameters of interest
  pivot_longer(cols = c(b1:minVPD)) %>%
  filter(name %in% c("minVPD", "AOPD")) %>% 
  mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels), 
          name = ifelse(name == "minVPD", "minRPD", name)
          #label = case_when(name == "minRPD"~"D", T~"C")
          )

points3<- 
comp3_sum %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )
labelSP <- 
  points3 %>% 
  ungroup() %>% 
  dplyr::select(name) %>% 
  unique() %>% 
  mutate(label = c("A", "B"))

```

```{r}
strip_text <- c(minRPD = "Delta~minRPD[~j]", AOPD = "Delta~AOPD[~j]")

p5<-
comp3_sum %>% 
  ggplot()+
  geom_hline(yintercept = 0, linetype = "dashed")+
  stat_halfeye(aes(y=value, x=YE, fill = name), .width = 0, alpha = 0.4, height = 0.4,
                  size = 0.7, point_alpha = 0)+
  #coord_flip()+
  geom_linerange(data = points3,
                 aes(ymin = q025, ymax = q975, x=YE, color = name, group = name),
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points3,
             aes(x = YE, y = q500, fill = name, shape = YE), size=3, stroke = 1.5)+
  

  geom_text(data = label,
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),x=YE, color = name),
                 fontface = "bold",size=3.5,
                 y= Inf, vjust = 1.2, hjust = 0.2)+
  geom_text(data = labelSP,
            aes(label = label),
                 fontface = "bold",size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  facet_wrap(~name, strip.position = "left",scales = "free",
             labeller = labeller(name = as_labeller(strip_text, label_parsed)))+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(-60,160,20), limits = c(-60,60))+
  scale_shape_manual(values = c(21, 23))+
  guides(fill = "none", color = "none", shape = "none")+
  labs(x="",y = "")+
  theme_custom()+
  theme(legend.position = "top")+
  theme(#strip.text.x = element_blank(), 
        strip.text = element_text(size=15), 
        #axis.title = element_text(size=10),
        panel.spacing = unit(0.6, "cm"),
        strip.background =element_rect(fill= NA))

p5
ggsave(plot = p5 , "../output/plots/figures2/Figure 5.png", width = 10, height = 4, dpi=600)
```
