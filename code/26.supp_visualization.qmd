---
title: "Untitled"
format: html
editor: visual
---

## Set up environment, functions and local variables

```{r setup, message = F}
library(tidyverse)
library(tidybayes)
library(patchwork)
library(cowplot)
library(extrafont)
library(ggpubr)

source("functions.R")
source("MCMC REFINED.R")


data <- readRDS("../data/data_ye2.RData") %>% 
  rename_all(~str_replace(.,"2","")) %>% 
  filter(SOURCE == "Kansas")
# Local variables
sum_path<- paste0("../output/model/summaries_50M.RData")
violeta <- '#75338a'
naranja <- '#de870d'
trt_levels <- c("Treated_Heavy","Treated_Moderate", "Treated_Light", "None_Heavy","None_Moderate")


```

```{r}
# Reorder facets
levels <-
  c(
  # High yields
  # Preds
  "None_Light-pred5.59", 
  "None_Moderate-pred5.59", 
  "None_Heavy-pred5.59", 
  "Treated_Light-pred5.59",
  "Treated_Moderate-pred5.59",
  "Treated_Heavy-pred5.59",
  # Var
  "None_Light-var5.59", 
  "None_Moderate-var5.59",
  "None_Heavy-var5.59",
  "Treated_Light-var5.59",
  "Treated_Moderate-var5.59" ,
  "Treated_Heavy-var5.59",
  # Low yields
  # Preds
  "None_Light-pred3.37", 
  "None_Moderate-pred3.37", 
  "None_Heavy-pred3.37", 
  "Treated_Light-pred3.37",
  "Treated_Moderate-pred3.37",
  "Treated_Heavy-pred3.37",
  # Var
  "None_Light-var3.37", 
  "None_Moderate-var3.37",
  "None_Heavy-var3.37",
  "Treated_Light-var3.37",
  "Treated_Moderate-var3.37" ,
  "Treated_Heavy-var3.37"
  )

names <-
  c(
  # High yields
  # Preds
  "None_Light-pred5.59" = "None_Light", 
  "None_Moderate-pred5.59" = "None_Moderate", 
  "None_Heavy-pred5.59"= "None_Heavy", 
  "Treated_Light-pred5.59"= "Treated_Light",
  "Treated_Moderate-pred5.59"= "Treated_Moderate",
  "Treated_Heavy-pred5.59"= "Treated_Heavy",
  # Var
  "None_Light-var5.59" = " ", 
  "None_Moderate-var5.59"= " ",
  "None_Heavy-var5.59"= " ",
  "Treated_Light-var5.59"= " ",
  "Treated_Moderate-var5.59"= " " ,
  "Treated_Heavy-var5.59"= " ",
  # Low yields
  # Preds
  "None_Light-pred3.37"= " ", 
  "None_Moderate-pred3.37"= " ", 
  "None_Heavy-pred3.37"= " ", 
  "Treated_Light-pred3.37"= " ",
  "Treated_Moderate-pred3.37"= " ",
  "Treated_Heavy-pred3.37"= " ",
  # Var
  "None_Light-var3.37"= " ", 
  "None_Moderate-var3.37"= " ",
  "None_Heavy-var3.37"= " ",
  "Treated_Light-var3.37"= " ",
  "Treated_Moderate-var3.37"= " " ,
  "Treated_Heavy-var3.37"= " "
  )

20/1.5


```

# Supplementary

## Figure 3 Sepplementary

Process model all splits

```{r  fig.width= 20, fig.height= 13.33}
min_stand <- 
data %>% 
  group_by(SOURCE, YE, TRT, CLEAN) %>% 
  summarise_at(vars(STAND), ~min(.,na.rm=T)) %>% 
  rename(minSTAND = STAND)
  
  
sum_df <- 
 readRDS(sum_path) %>% 
  full_join(min_stand) %>% 
  mutate(mod_sum = pmap(list(..1 = mod_sum, ..2 = minSTAND), 
                        ~ ..1 %>% mutate(STAND = ifelse(STAND >= ..2, STAND, NA)) %>% 
                          drop_na()
                        ))

points2 <- data %>% 
  ungroup() %>% 
  # mutate(SOURCE = case_when(TRT == "None"& CLEAN=="Light" ~ SOURCE, 
  #                            TRT == "Treated"& CLEAN=="Heavy" ~ SOURCE, 
  #                            T~NA_character_
  #                            )
  #        
  #        ) %>% 
  # 
  # drop_na(SOURCE) %>% 
  mutate(var = "var", 
         pred = "pred") %>% 
  pivot_longer(cols = c(pred, var), names_to = 'estimate', values_to = "value") %>% 
  mutate(YIELD = case_when(estimate == "pred"~YIELD, T~NA_real_)) %>% 
  mutate(TRT = paste0(TRT, "_", CLEAN),
         # Define variables for facet_wrap
         FW = paste0(TRT, "-", estimate, YE),
         # Roerder facets
         FW = fct_relevel(as.factor(FW),levels =  levels)
         ) 




# label <- unique(points2[,c(1,2,4,5,8)]) %>% 
#   ungroup() %>% 
#   mutate(label = c("C", "D", "A", "B", "E", "F", "G", "H"), 
#          # Define variables for facet_wrap
#          FW = paste0(TRT, "-", estimate, YE),
#          # Roerder facets
#          #FW = fct_relevel(as.factor(FW),levels =  levels)
#          ) %>% 
#   arrange(FW)


  



data.plot <- 
sum_df %>% 
  unnest(cols = c(mod_sum)) %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  filter(SOURCE %in% c("Kansas")) %>% 
  # mutate(SOURCE = case_when(TRT == "None"& CLEAN=="Light" ~ SOURCE, 
  #                            TRT == "Treated"& CLEAN=="Heavy" ~ SOURCE, 
  #                            T~NA_character_
  #                            )
  #        ) %>% 
  # drop_na(SOURCE) %>% 
  
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(STAND, pred_q500, pred_q025r,pred_q975,var_q500, var_q025,var_q975 ) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:var_q975), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  ungroup() %>% 
  mutate(TRT = paste0(TRT, "_", CLEAN), 
         max_height = case_when(estimate == "pred"~9, 
                                estimate == "var"~1.3,
                                ),
         min_height = case_when(estimate == "pred"~0, 
                                estimate == "var"~0
                                ),
          
         # Define variables for facet_wrap
         FW = paste0(TRT, "-", estimate, YE),
         # Roerder facets
         FW = fct_relevel(as.factor(FW), levels = levels)
         ) #%>% 
  #arrange(FW) %>% 
p2split <- 
data.plot %>% 
ggplot()+
  geom_blank(aes(y = max_height)) +
  geom_blank(aes(y = min_height)) +
  geom_point(data = points2,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 3, alpha = 0.1
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND,ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  # geom_text(data = label, 
  #           aes(label = label),
  #                fontface = "bold", size=6,
  #                x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste("Plant Density (",plants~m^-2,")")))+
  facet_wrap(~FW, 
             ncol=6,
             scales = "free_y",
             #strip.position = "left"
             labeller = labeller(FW = as_labeller(names))
             )+
  theme_custom()+
  theme(strip.text = element_text(size = 10), 
        axis.text = element_text(size =12),#, 
                                   #color = ifelse(data.plot$FW == "None_Heavy-pred3.37","black" ,"white")),
        axis.title = element_text(size = 15),
        #panel.spacing = unit(1,"cm"), 
        strip.placement = "outside")
p2split


```

GGarrange

```{r fig.width= 20, fig.height= 13.33 }
pYieldEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "    Low Yield                                              High Yield", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 10
            )+
  theme_nothing()


pEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "         Environments        ", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 10
            )+
  theme_nothing()


pST2 <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "                      Seed Treatment_Seed Size                       ", 
            aes(x = 5, y = 5),
            #angle = 90, 
            fontface = "bold", size = 7
            )+
  theme_nothing()



p1 <- ggarrange(pEnvs, pYieldEnvs, p2split, ncol = 3,
                widths = c(0.035, 0.035, 0.93))

p1

ggsave(plot = p1 , "../output/plots/figures/Supplementary Figure 3.png", width = 20, height = 13.33, dpi=600)

```

## Figure 4

Yield differences between treatments

Accommodate data and generate summaries

```{r fig.width=3.7, fig.height=4}
comp <- 
readRDS(sum_path) %>% 
  mutate(.,
         mod  = map(mod,
                        ~mod_predict(.x))
         )

comp2<-
comp[, c("YE", "TRT", "CLEAN", "mod")] %>% 
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(.,
         pred = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         
         p = map(pred, 
                       function(pred){
                        psd  <- sum(ifelse(pred[,"sd"] > 0,1,0))/nrow(pred)
                        pmean <-  sum(ifelse(pred[,"mean"] > 0,1,0))/nrow(pred)
                        return(as.data.frame(cbind(var = psd, mean = pmean)))
                       }
                 )
         ) 

# Free unuused memory
rm(comp)
gc()

# Reorder facets
levels <-
  c(
  # High yields
  "None_Moderate-5.59", 
  "None_Heavy-5.59", 
  "Treated_Light-5.59",
  "Treated_Moderate-5.59",
  "Treated_Heavy-5.59",

  "None_Moderate-3.37", 
  "None_Heavy-3.37", 
  "Treated_Light-3.37",
  "Treated_Moderate-3.37",
  "Treated_Heavy-3.37"
  )

comp2_sum <-
comp2[, c("YE","Treatment", "pred")] %>% 
  #mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels)) %>% 
  unnest(cols = c(pred)) %>% 
  #Transform variance to SD
  pivot_longer(cols = c(sd, mean)) %>% 
  ungroup() %>% 
  mutate(.,
         FW = fct_relevel(as.factor(paste0(Treatment, "-", YE)), levels),
         # Rename names
         name = case_when(name == "mean" ~ "Expected Yield", 
                          name == "sd" ~ "Yield Std Deviation"),
         )

label <- comp2[,c("YE","Treatment", "p")] %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(var, mean)) %>% 
  ungroup() %>% 
   mutate(.,
         FW = fct_relevel(as.factor(paste0(Treatment, "-", YE)), levels),
         # Rename names
         name = case_when(name == "mean" ~ "Expected Yield", 
                          name == "var" ~ "Yield Std Deviation"),
          hjust = case_when(name == "Expected Yield"~ .5, T~.3)
         )

points<- 
comp2_sum %>% 
  group_by(FW, name, YE, Treatment) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),4), 
                                 q975  = ~round(quantile(., probs = 0.975),4), 
                                 q025  = ~round(quantile(., probs = 0.025),4) 
                                 )
               )


# Summarise quantities from posterior

points %>% 
  group_by(name, YE, Treatment) %>% 
  summarise_at(vars(q500, q975, q025), ~quantile(.,probs = .5)
               ) %>% 
  filter(Treatment %in% c("None_Moderate", "None_Heavy", "Treated_Moderate" , "Treated_Heavy" )) %>%
  filter(name == "Expected Yield") %>% 
  filter(YE == 3.37) %>% 
  ungroup() %>% 
  summarise_at(vars(q500, q975, q025), ~quantile(.,probs = .5)
               )
```

Plot figure 4

```{r fig.width=15, fig.height = 7.5}



names <-
  c(
  # High yields
  # Preds
  "None_Light-5.59" = "None_Light", 
  "None_Moderate-5.59" = "None_Moderate", 
  "None_Heavy-5.59"= "None_Heavy", 
  "Treated_Light-5.59"= "Treated_Light",
  "Treated_Moderate-5.59"= "Treated_Moderate",
  "Treated_Heavy-5.59"= "Treated_Heavy",
  # Low yields
  # Preds
  "None_Light-3.37"= " ", 
  "None_Moderate-3.37"= " ", 
  "None_Heavy-3.37"= " ", 
  "Treated_Light-3.37"= " ",
  "Treated_Moderate-3.37"= " ",
  "Treated_Heavy-3.37"= " "

  )

p3 <- 
comp2_sum %>% 
  ggplot()+
  stat_halfeye(aes(x = value, 
                   y = stringr::str_wrap(name, 9),
                   fill=name), 
               .width = 0, alpha = 0.4, height = 0.4, 
                  size = 0.7, point_alpha = 0)+
  geom_linerange(data = points,
                 aes(xmin = q025, xmax = q975, 
                     y = stringr::str_wrap(name, 9), 
                     color = name, group = name), 
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8)+
  geom_text(data = label,
            aes(label = paste0(" p (y > 0) = ", round(value, 3)), hjust = hjust,
                y = stringr::str_wrap(name, 9), 
                color = name),
            fontface = "bold",
            size=3.5,
            x= Inf, 
            vjust = 1.2)+
  geom_point(data = points,aes(y = stringr::str_wrap(name, 9), 
                               x = q500, fill = name), shape = 21, size=3, stroke = 1.5)+
  
  
  geom_vline(xintercept = 0, linetype = "dashed")+
  coord_flip()+
  facet_wrap(~FW, 
             ncol = 5, 
             labeller = labeller(FW = as_labeller(names)))+
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  guides(fill = "none", color = "none")+
  labs(y = "", x = expression(Delta~paste("Yield (",Mg~ha^-1,")")))+
  theme_custom()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        #strip.text.y = element_blank(), 
        axis.title = element_text(size=10)
  )


pYieldEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "      Low Yield                              High Yield", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 6
            )+
  theme_nothing()


pEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "         Environments        ", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 6
            )+
  theme_nothing()


p3a <- ggarrange(pEnvs, pYieldEnvs, p3, ncol = 3,
                widths = c(0.035, 0.035, 0.93))
p3a
ggsave(plot = p3a , "../output/plots/figures/Supplementary Figure 4.png", width = 15, height = 7.5)

```

## Figure 5C, 5D

```{r}
comp3 <-
  readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  
  
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(., 
         posterior = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         p = map(posterior, 
                       function(posterior){
                        p <-  apply(posterior , MARGIN = 2, FUN = function(param){
                          sum(ifelse(param > 0,1,0))/nrow(posterior)
                          })
                        
                        return(data.frame(a1 = p["a1"], maxVPD = p["maxVPD"], minVPD = p["minVPD"], b1 = p["b1"], AOPD = p["AOPD"]))
                        }
                 )
         ) %>% 
  rename(treated = "VAL")



label <- comp3[,c("YE","Treatment", "p")] %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(a1:AOPD)) %>% 
   filter(name %in% c("minVPD", "AOPD")) %>% 
   mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels),
          FW = fct_relevel(as.factor(paste0(Treatment, "-", YE)), levels),
          hjust = case_when(name == "AOPD"~ 0.5, T~.1), 
          name = ifelse(name == "minVPD", "minRPD", name)
          )

comp3_sum<-
comp3[,c("YE","Treatment","posterior")] %>% 
  mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels)) %>% 
  unnest(cols = c(posterior)) %>% 
  # Filter parameters of interest
  pivot_longer(cols = c(b1:minVPD)) %>%
  filter(name %in% c("minVPD", "AOPD")) %>% 
  mutate(.,
         FW = fct_relevel(as.factor(paste0(Treatment, "-", YE)), levels), 
         name = ifelse(name == "minVPD", "minRPD", name)
         )


points3<- 
comp3_sum %>% 
  group_by(FW, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )

```

```{r fig.width=12.5, fig.height = 5}
p4<-
comp3_sum %>% 
  ggplot()+
  geom_hline(yintercept = 0, linetype = "dashed")+
  stat_halfeye(aes(y=value, x=name, fill= name), 
               .width = 0, alpha = 0.4, height = 0.4, 
                  size = 0.7, point_alpha = 0)+
  #coord_flip()+
  geom_linerange(data = points3,
                 aes(ymin = q025, ymax = q975, x=name, color = name, group = name),
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points3,
             aes(x = name, y = q500, fill = name), shape = 21, size=3, stroke = 1.5)+
  

  geom_text(data = label,
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),x = name, color = name, hjust = hjust),
                 fontface = "bold",size=3,
                 y= Inf, vjust = 1.2)+
  # geom_text(data = label,
  #           aes(label = "B"),
  #                fontface = "bold",size=6,
  #                x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  facet_wrap(~FW, ncol = 5)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(-50,150,50), limits = c(-60,125))+

  guides(fill = "none", color = "none")+
  labs(x="",y = expression(Delta~paste("Plant Density (",pl~m^-2,")")))+
  theme_custom()+
  theme(legend.position = "top")+
  theme(#strip.text.x = element_blank(), 
        #strip.text.y = element_blank(), 
        axis.title = element_text(size=10),
        panel.spacing = unit(0.6, "cm"),
        strip.background =element_rect(fill= NA))
p4

ggsave(plot = p4 , "../output/plots/figures/Supplementary Figure 6.png", width = 12.5, height = 5)

```

## Figure 5A, 5B

```{r}

# Reorder facets
levels <-
  c(
  # High yields
  # Preds
  "None_Light", 
  "None_Moderate", 
  "None_Heavy", 
  "Treated_Light",
  "Treated_Moderate",
  "Treated_Heavy"
  )


comp4 <- 
readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  ungroup() %>% 
  mutate(.,
         Treatment = fct_relevel(as.factor(paste0(TRT, "_", CLEAN)), levels),
         mod = map(mod, ~as.data.frame(.x[,c("minVPD", "AOPD")])),
         YE = ifelse(YE == 3.37, "Low Yield", "High Yield"),
         ) %>% 
  #filter(Treatment %in% c("None_Light", "Treated_Heavy") ) %>% 
  dplyr::select(-c(TRT, CLEAN)) %>% 
  unnest(c(mod)) %>% 
  rename(minRPD = minVPD)

points4<- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>% 
  group_by(YE,Treatment, name) %>% 

  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )

# points4 %>% 
#   filter(Treatment == "Treated_Light") %>% 
#   mutate_at(vars(q500, q975, q025), ~.*4046.86/0.85)
  
```

```{r fig.height= 7, fig.width=7}
p5 <- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>%
  ggplot()+
  facet_wrap(~YE)+
  stat_halfeye(aes(y=value, x=Treatment, fill= name),scale = 0.7,
               .width = 0, position = position_dodge(0.7),alpha = 0.4, height = 0.25, 
                  size = 0.7, point_alpha = 0)+
  coord_flip()+
  geom_linerange(data = points4, 
                 aes(ymin = q025, ymax = q975, x=Treatment, color = name, group = name), 
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8,
                 position = position_dodge2(.7))+
  geom_point(data = points4,
             aes(x = Treatment, y = q500, fill = name), 
             shape = 21, size=3, stroke = 1.5,position = position_dodge2(.7))+
  # geom_text(data = p6_label,
  #           aes(label = "A"),
  #                fontface = "bold", size=6,
  #                x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  guides(fill = guide_legend(title = ""), color = "none")+
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(0,200,50), limits = c(50,200))+
  labs(y = expression('Plant Density (plants m'^-2~")"),x="")+
  theme_custom()+
  theme(legend.position = "top",
        legend.background = element_blank(),
        legend.key=element_blank(),
        #axis.text.x = element_text(angle = 90),
    
        strip.text.y = element_text(size = rel(1.5)), 
        
        
        strip.background = element_rect(fill= NA))

ggsave(plot = p5 , "../output/plots/figures/Supplementary Figure 5.png", width = 7, height = 7)

```
