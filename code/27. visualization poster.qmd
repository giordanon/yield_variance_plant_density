---
title: "Untitled"
format: html
editor: visual
---

## Set up environment, functions and local variables

```{r setup, message = F}
library(tidyverse)
library(tidybayes)
library(patchwork)
library(cowplot)
library(extrafont)
library(ggpubr)

source("functions.R")
source("MCMC REFINED.R")


data <- readRDS("../data/data_ye2.RData") %>% 
  rename_all(~str_replace(.,"2","")) %>% 
  filter(SOURCE == "Kansas")
# Local variables
sum_path<- paste0("../output/model/summaries_50M.RData")
violeta <- '#75338a'
naranja <- '#de870d'
trt_levels <- c("Treated_Heavy","Treated_Moderate", "Treated_Light", "None_Heavy","None_Moderate")


```

# Main body

## Figure 1 Canada

```{r fig.width = 10, fig.height=5}

sum_df <- readRDS("../output/model/summaries_canada.RData")

dataCAN <- readRDS("../data/data_ye2.RData") %>% 
  rename_all(~str_replace(.,"2","")) %>% 
  filter(SOURCE == "Canada")


points <- dataCAN %>% 
  mutate(var = "var", 
         pred = "pred") %>% 
  pivot_longer(cols = c(pred, var), names_to = 'estimate', values_to = "value") %>% 
  mutate(YIELD = case_when(estimate == "pred"~YIELD, T~NA_real_))

estimate_names <- c(pred = "Expected~Yield~(Mg~ha^-1)",
                    var = "Yield~Std~Deviation~(Mg~ha^-1)"
                    ) 

label <- unique(points[, "estimate"]) %>% 
  mutate(label = c("A", "B"))


pCAN <- sum_df[,c("mod_sum")] %>% 
  unnest() %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(STAND, pred_q500, pred_q025r,pred_q975,var_q500, var_q025,var_q975 ) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:var_q975), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  ggplot()+
  geom_point(data = points,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 3, alpha = 0.1
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND,ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  geom_text(data = label,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+

  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste("Plant Density (",plants~m^-2,")")))+
  facet_wrap(~estimate, 
             scales = "free", 
             strip.position = "left",
             labeller = labeller(estimate = as_labeller(estimate_names, label_parsed))
             )+
  theme_custom()+
  theme(strip.text = element_text(size = 15))
  

pCAN
ggsave(plot = pCAN , "../output/plots/figures/Figure 1.png", width = 10, height = 4, dpi=600)
```

## Figure 2 Kansas overall

```{r fig.width = 10, fig.height=5}

sum_df <- readRDS("../output/model/summaries_50M_ksAll.RData")


points <- data %>% 
  mutate(var = "var", 
         pred = "pred") %>% 
  pivot_longer(cols = c(pred, var), names_to = 'estimate', values_to = "value") %>% 
  mutate(YIELD = case_when(estimate == "pred"~YIELD, T~NA_real_))

estimate_names <- c(pred = "Expected~Yield~(Mg~ha^-1)",
                    var = "Yield~Std~Deviation~(Mg~ha^-1)"
                    ) 

label <- unique(points[, "estimate"]) %>% 
  mutate(label = c("A", "B"))


pKS <- sum_df[,c("mod_sum")] %>% 
  unnest() %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(STAND, pred_q500, pred_q025r,pred_q975,var_q500, var_q025,var_q975 ) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:var_q975), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  ggplot()+
  geom_point(data = points,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 3, alpha = 0.1
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND,ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  geom_text(data = label,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+

  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste("Plant Density (",plants~m^-2,")")))+
  facet_wrap(~estimate, 
             scales = "free", 
             strip.position = "left",
             labeller = labeller(estimate = as_labeller(estimate_names, label_parsed))
             )+
  theme_custom()+
  theme(strip.text = element_text(size = 15))
  

pKS
ggsave(plot = pKS , "../output/plots/figures/Figure 2.png", width = 10, height = 4, dpi=600)
```

## Poster Figure 2

Process model all splits

```{r  fig.width=16, fig.height=7}
min_stand <- 
  data %>% 
    group_by(SOURCE, YE, TRT, CLEAN) %>% 
    summarise_at(vars(STAND), ~min(.,na.rm=T)) %>% 
    rename(minSTAND = STAND) %>% 
    filter(YE == 3.37 & TRT == "None" & CLEAN == "Light")
    
    
  sum_df <- 
   readRDS(sum_path) %>% 
    full_join(min_stand) %>% 
    mutate(mod_sum = pmap(list(..1 = mod_sum, ..2 = minSTAND), 
                          ~ ..1 %>% mutate(STAND = ifelse(STAND >= ..2, STAND, NA)) %>% 
                            drop_na()
                          ))%>% 
    filter(YE == 3.37 & TRT == "None" & CLEAN == "Light")
 
 
 # Reorder facets
 levels <- c("None_Light-pred5.59" ,
              "None_Light-var5.59",
              "Treated_Heavy-pred5.59",
              "Treated_Heavy-var5.59",
              "None_Light-pred3.37",
              "None_Light-var3.37",
              "Treated_Heavy-pred3.37",
              "Treated_Heavy-var3.37" 
               )
 
 points2 <- data %>% 
    filter(YE == 3.37 & TRT == "None" & CLEAN == "Light") %>% 
    ungroup() %>% 
    mutate(SOURCE = case_when(TRT == "None"& CLEAN=="Light" ~ SOURCE, 
                               TRT == "Treated"& CLEAN=="Heavy" ~ SOURCE, 
                               T~NA_character_
                               )
           
           ) %>% 
    
    drop_na(SOURCE) %>% 
    mutate(var = "var", 
           pred = "pred") %>% 
    pivot_longer(cols = c(pred, var), names_to = 'estimate', values_to = "value") %>% 
    mutate(YIELD = case_when(estimate == "pred"~YIELD, T~NA_real_)) %>% 
    mutate(TRT = paste0(TRT, "_", CLEAN),
           # Define variables for facet_wrap
           FW = paste0(TRT, "-", estimate, YE),
           # Roerder facets
           FW = fct_relevel(as.factor(FW),levels =  levels)
           )

 
 names <- c(`None_Light-pred5.59` = "Expected~Yield~(Mg~ha^-1)" ,
             `None_Light-var5.59` ="Yield~Std~Deviation~(Mg~ha^-1)" ,
             `Treated_Heavy-pred5.59` = "Expected~Yield~(Mg~ha^-1)",
             `Treated_Heavy-var5.59` = "Yield~Std~Deviation~(Mg~ha^-1)",
             `None_Light-pred3.37` = "Expected~Yield~(Mg~ha^-1)",
             `None_Light-var3.37` = "Yield~Std~Deviation~(Mg~ha^-1)" ,
             `Treated_Heavy-pred3.37` = "Expected~Yield~(Mg~ha^-1)",
             `Treated_Heavy-var3.37` = "Yield~Std~Deviation~(Mg~ha^-1)" 
             )
 
 
 label <- unique(points2[,c(1,2,4,5,8)]) %>% 
    ungroup() %>% 
    mutate(label = c("A", "B"), 
           # Define variables for facet_wrap
           FW = paste0(TRT, "-", estimate, YE),
           # Roerder facets
           FW = fct_relevel(as.factor(FW),levels =  levels)
           ) %>% 
    arrange(FW)%>% 
    filter(YE == 3.37 & TRT == "None" & CLEAN == "Light")

  



p2split <- 
sum_df %>% 
  unnest(cols = c(mod_sum)) %>% 
  mutate(pred_q025r = ifelse(pred_q025<=0,0,pred_q025), 
         pred_q025 = ifelse(pred_q025<=0,NA,pred_q025)
         ) %>% 
  filter(SOURCE %in% c("Kansas")) %>% 
  mutate(SOURCE = case_when(TRT == "None"& CLEAN=="Light" ~ SOURCE, 
                             TRT == "Treated"& CLEAN=="Heavy" ~ SOURCE, 
                             T~NA_character_
                             )
         ) %>% 
  drop_na(SOURCE) %>% 
  
  mutate_at(vars(var_q500, var_q025,var_q975), ~sqrt(.)) %>% 
  dplyr::select(STAND, pred_q500, pred_q025r,pred_q975,var_q500, var_q025,var_q975 ) %>% 
  rename(pred_q025= pred_q025r) %>% 
  pivot_longer(cols = c(pred_q500:var_q975), 
               names_sep = "_", 
               names_to = c("estimate", ".value")
               
               ) %>% 
  ungroup() %>% 
  mutate(TRT = paste0(TRT, "_", CLEAN), 
         max_height = case_when(estimate == "pred"~9, 
                                estimate == "var"~1.3,
                                ),
         min_height = case_when(estimate == "pred"~0, 
                                estimate == "var"~0
                                ),
          
         # Define variables for facet_wrap
         FW = paste0(TRT, "-", estimate, YE),
         # Roerder facets
         FW = fct_relevel(as.factor(FW), levels = levels)
         ) %>% 
  arrange(FW) %>% 

ggplot()+
  geom_blank(aes(y = max_height)) +
  geom_blank(aes(y = min_height)) +
  geom_point(data = points2,
           aes(x = STAND, y = YIELD),
          shape = 21,
         fill = "black",
        size = 5, alpha = 0.2
       )+
  # Expected value and credible interval for the variance model
  geom_line(aes(x = STAND, y = q500, group = estimate), color = "black", linewidth = 1.3)+
  geom_line(aes(x = STAND, y = q975, color = estimate))+
  geom_line(aes(x = STAND, y = q025, color = estimate))+
  geom_ribbon(aes(x = STAND,ymin = q025, ymax = q975, fill = estimate), alpha = 0.2)+
  
  geom_text(data = label, 
            aes(label = label),
                 fontface = "bold", size=10,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_x_continuous(limits = c(0,202))+
  guides(color = "none", fill="none")+
  labs(y = "", x = expression(paste("Plant Density (",plants~m^-2,")")))+
  facet_wrap(~FW, 
             ncol=1,
             scales = "free_y",
             strip.position = "left",
             labeller = labeller(FW = as_labeller(names, label_parsed))
             )+
  theme_custom()+
  theme(
        strip.text = element_text(size = 28), 
        axis.text = element_text(size = 15), 
        axis.title.x = element_text(size = 28), 
        #panel.spacing = unit(1,"cm"), 
        strip.placement = "outside"
        )

p2split

#ggsave(plot = p2split , "../output/plots/figures/Poster Figure 2.png", width = 7.35, height = 11.9,units = "in", dpi=600)
```

GGarrange

```{r fig.width=17, fig.height= 8 }
pYieldEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "    Low Yield                         High Yield", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 7
            )+
  theme_nothing()


pEnvs <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "         Environments        ", 
            aes(x = 5, y = 5),
            angle = 90, 
            fontface = "bold", size = 7
            )+
  theme_nothing()

pST <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "                                      None_Light                                                                                   Treated_Heavy         ", 
            aes(x = 5, y = 5),
            #angle = 90, 
            fontface = "bold", size = 7
            )+
  theme_nothing()

pST2 <- 
ggplot()+
  geom_blank(aes(y = 10, x = 10)) +
  geom_blank(aes(y = 0, x = 0)) +
  geom_text(label = "                                              Seed Treatment_Seed Size                       ", 
            aes(x = 5, y = 5),
            #angle = 90, 
            fontface = "bold", size = 7
            )+
  theme_nothing()



p1 <- ggarrange(pEnvs, pYieldEnvs, p2split, ncol = 3,
                widths = c(0.035, 0.035, 0.93))

p2 <- ggarrange(pST2, pST,NULL, p1, nrow = 4,
                heights = c(0.04, 0.04,0.015, 0.905))

ggsave(plot = p2 , "../output/plots/figures/Figure 3.png", width = 17, height = 8, dpi=600)

```

```{r}
# Canadian data model used for retrieving priors
model <- readRDS("../output/model/model_canada.RData")
q99 <- apply(model$mod[[1]], 2, quantile ,probs = .99)
q50 <- apply(model$mod[[1]], 2, quantile ,probs = .5)
q01 <- apply(model$mod[[1]], 2, quantile ,probs = .001)

estimateSD <- function(q50, q99) {
  
  z99 <- 2.576
  # Calculate using the 99th percentile
  sd <- (q99 - q50) / z99
  
  return(c(sd))
}

round(estimateSD(q50, q99),2)
round(q50,3)
round(q01,2)
round(q99,2)
```

## Poster Figure 3

Yield differences between treatments

Accommodate data and generate summaries

```{r fig.width=3.7, fig.height=4}
comp <- 
readRDS(sum_path) %>% 
  #filter(YE == 3.37) %>% 
  mutate(.,
         mod  = map(mod,
                        ~mod_predict(.x))
         )

comp2<-
comp[, c("YE", "TRT", "CLEAN", "mod")] %>% 
  #filter(YE == 3.37 & TRT == "None" & CLEAN == "Light") %>% 
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(.,
         pred = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         
         p = map(pred, 
                       function(pred){
                        psd  <- sum(ifelse(pred[,"sd"] > 0,1,0))/nrow(pred)
                        pmean <-  sum(ifelse(pred[,"mean"] > 0,1,0))/nrow(pred)
                        return(as.data.frame(cbind(var = psd, mean = pmean)))
                       }
                 )
         ) %>% 
  filter(Treatment == "Treated_Heavy" & YE == 3.37)


label <- comp2[,c("YE","Treatment", "p")] %>% 
  filter(Treatment == "Treated_Heavy" & YE == 3.37) %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(var, mean)) %>% 
   mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels),
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low Yield", 
                        YE == 5.59 ~ "High Yield"),
         # Rename names
         name = case_when(name == "mean" ~ "Expected Yield", 
                          name == "var" ~ "Yield Std Deviation"),
          )


# Free unuused memory
rm(comp)
gc()

comp2_sum <-
comp2[, c("YE","Treatment", "pred")] %>% 
  #mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels)) %>% 
  unnest(cols = c(pred)) %>% 
  #Transform variance to SD
  pivot_longer(cols = c(sd, mean)) %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low Yield", 
                        YE == 5.59 ~ "High Yield"),
         # Rename names
         name = case_when(name == "mean" ~ "Expected Yield", 
                          name == "sd" ~ "Yield Std Deviation"),
          
         )

points<- 
comp2_sum %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )

labelSP <- 
  points %>% 
  ungroup() %>% 
  dplyr::select(YE) %>% 
  unique() %>% 
  mutate(label = c("A"))
```

Plot figure 4

```{r fig.width=6, fig.height = 4}
p4 <- 
comp2_sum %>% 
  ggplot()+
  stat_halfeye(aes(x = value,
                   y = stringr::str_wrap(name, 9),
                   fill=name),
               .width = 0, alpha = 0.4, height = 0.4,
                  size = 0.7, point_alpha = 0)+
  geom_linerange(data = points,
                 aes(xmin = q025,
                     xmax = q975, 
                     y=stringr::str_wrap(name, 9),
                     color = name, 
                     group = name), 
                 linewidth = 1.9, 
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points,
             aes(y = stringr::str_wrap(name, 9),
                 x = q500, fill = name),
             shape = 21, 
             size=5, 
             stroke = 1.5)+
  geom_vline(xintercept = 0, 
             linetype = "dashed")+
  geom_text(data = label,
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),
                y = stringr::str_wrap(name, 9), 
                color = name),
            fontface = "bold",
            size=7,
            x= Inf, 
            vjust = 1.2,
            hjust = 0.5)+
    geom_text(data = labelSP,
            aes(label = label),
                 fontface = "bold",size=10,
                 x = Inf, y= -Inf, vjust = 1.2, hjust =-0.25)+
  coord_flip()+
  #facet_wrap(~YE)+
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  guides(fill = "none", color = "none")+
  labs(y = "", x = expression(Delta~paste("Yield (",Mg~ha^-1,")")))+
  theme_custom()+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, size = 20),
        #axis.title = element_text(size=10), 
        
        axis.text.y = element_text(size = 20), 
        axis.title.y = element_text(size = 28), 
        #panel.spacing = unit(1,"cm"), 
        #strip.placement = "outside", 
        strip.text = element_blank()
  )
p4
#ggsave(plot = p4 , "../output/plots/figures/Poster Figure 3.png", width = 8, height = 5, dpi=600)

ggsave(plot = p4 , "../output/plots/figures/Poster Figure 3.png", width = 6,
       height = 7,units = "in", dpi=600)
```

## Figure 5C, 5D

```{r}
comp3 <-
  readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  
  
  pivot_wider(names_from = c(TRT, CLEAN), values_from = mod) %>% 
  pivot_longer(cols = -c(None_Light, YE), values_to = "VAL", names_to = "Treatment") %>% 
  mutate(., 
         posterior = pmap(list(..1 = None_Light, ..2 = VAL), 
                        ~as.data.frame(..2 - ..1)
                        ), 
         p = map(posterior, 
                       function(posterior){
                        p <-  apply(posterior , MARGIN = 2, FUN = function(param){
                          sum(ifelse(param > 0,1,0))/nrow(posterior)
                          })
                        
                        return(data.frame(a1 = p["a1"], maxVPD = p["maxVPD"], minVPD = p["minVPD"], b1 = p["b1"], AOPD = p["AOPD"]))
                        }
                 )
         ) %>% 
  rename(treated = "VAL") %>% 
  filter(Treatment == "Treated_Heavy") %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low Yield", 
                        YE == 5.59 ~ "High Yield")
         
         )



label <- comp3[,c("YE","Treatment", "p")] %>% 
  unnest(cols = c(p)) %>% 
   pivot_longer(cols = c(a1:AOPD)) %>% 
   filter(name %in% c("minVPD", "AOPD")) %>% 
   mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels), 
          name = ifelse(name == "minVPD", "minRPD", name)
          #label = case_when(name == "minRPD"~"D", T~"C")
          )

comp3_sum<-
comp3[,c("YE","Treatment","posterior")] %>% 
  unnest(cols = c(posterior)) %>% 
  # Filter parameters of interest
  pivot_longer(cols = c(b1:minVPD)) %>%
  filter(name %in% c("minVPD", "AOPD")) %>% 
  mutate(Treatment = fct_relevel(as.factor(Treatment), trt_levels), 
          name = ifelse(name == "minVPD", "minRPD", name)
          #label = case_when(name == "minRPD"~"D", T~"C")
          )

points3<- 
comp3_sum %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )
labelSP <- 
  points3 %>% 
  ungroup() %>% 
  dplyr::select(YE) %>% 
  unique() %>% 
  mutate(label = c("A", "B"))

```

```{r}
p5<-
comp3_sum %>% 
  ggplot()+
  geom_hline(yintercept = 0, linetype = "dashed")+
  stat_halfeye(aes(y=value, x=name, fill= name), 
               .width = 0, alpha = 0.4, height = 0.4, 
                  size = 0.7, point_alpha = 0)+
  #coord_flip()+
  geom_linerange(data = points3,
                 aes(ymin = q025, ymax = q975, x=name, color = name, group = name),
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8)+
  geom_point(data = points3,
             aes(x = name, y = q500, fill = name), shape = 21, size=3, stroke = 1.5)+
  

  geom_text(data = label,
            aes(label = paste0(" p (y > 0) = ", round(value, 3)),x=name, color = name),
                 fontface = "bold",size=3.5,
                 y= Inf, vjust = 1.2, hjust = 0.2)+
  geom_text(data = labelSP,
            aes(label = label),
                 fontface = "bold",size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  facet_wrap(~YE)+
  
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(-60,160,20), limits = c(-60,60))+

  guides(fill = "none", color = "none")+
  labs(x="",y = expression(Delta~paste("Plant Density (",plants~m^-2,")")))+
  theme_custom()+
  theme(legend.position = "top")+
  theme(#strip.text.x = element_blank(), 
        #strip.text.y = element_blank(), 
        axis.title = element_text(size=10),
        panel.spacing = unit(0.6, "cm"),
        strip.background =element_rect(fill= NA))

p5
ggsave(plot = p5 , "../output/plots/figures/Figure 5.png", width = 8, height = 4, dpi=600)
```

## Figure 5A, 5B

```{r}
comp4 <- 
readRDS(sum_path)[,c("YE","TRT", "CLEAN", "mod")] %>% 
  ungroup() %>% 
  mutate(.,
         Treatment = paste0(TRT, "_", CLEAN), 
         mod = map(mod, ~as.data.frame(.x[,c("minVPD", "AOPD")])),
         ) %>% 
  filter(Treatment %in% c("None_Light", "Treated_Heavy") ) %>% 
  dplyr::select(-c(TRT, CLEAN)) %>% 
  unnest(c(mod)) %>% 
  mutate(.,
         # Rename yielding environments
         YE = case_when(YE == 3.37 ~ "Low Yield", 
                        YE == 5.59 ~ "High Yield")
         ) %>% 
  rename(minRPD = minVPD)
          

points4<- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>% 
  group_by(YE,Treatment, name) %>% 
  summarise_at(vars(value), list(q500 = ~round(median(.),1), 
                                 q975  = ~round(quantile(., probs = 0.975),1), 
                                 q025  = ~round(quantile(., probs = 0.025),1) 
                                 )
               )
  
```

```{r}
p6 <- 
comp4 %>% 
  pivot_longer(c(minRPD, AOPD)) %>% 
  ggplot()+
  facet_wrap(~YE)+
  stat_halfeye(aes(y=value, x=Treatment, fill= name),scale = 0.7,
               .width = 0, position = position_dodge(0.7),alpha = 0.4, height = 0.25, 
                  size = 0.7, point_alpha = 0)+
  #coord_flip()+
  geom_linerange(data = points4, 
                 aes(ymin = q025, ymax = q975, x=Treatment, color = name, group = name), 
                 linewidth = 1.6, 
                 lineend = "round",
                 alpha=0.8,
                 position = position_dodge2(.7))+
  geom_point(data = points4,
             aes(x = Treatment, y = q500, fill = name), 
             shape = 21, size=3, stroke = 1.5,position = position_dodge2(.7))+
  geom_text(data = labelSP,
            aes(label = label),
                 fontface = "bold", size=6,
                 x = -Inf, y= Inf, vjust = 1.2, hjust =-0.25)+
  
  guides(fill = guide_legend(title = ""), color = "none")+
  scale_fill_manual(values = c(violeta, naranja))+
  scale_color_manual(values = c(violeta, naranja))+
  scale_y_continuous(breaks = seq(0,200,50), limits = c(50,200))+
  labs(y = expression('Plant Density (plants m'^-2~")"),x="")+
  theme_custom()+
  theme(legend.position = "top",
        legend.background = element_blank(),
        legend.key=element_blank(),
    
        strip.text.y = element_text(size = rel(1.5)), 
        
        strip.background = element_rect(fill= NA))

p6 

ggsave(plot = p6 , "../output/plots/figures/Figure 6.png", width = 8, height = 5, dpi=600)
```
